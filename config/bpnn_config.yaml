# BPNN（反向传播神经网络）配置文件 - 优化配置（R²=0.7990）

data:
  raw_data_dir: data/raw/
  processed_data_dir: data/processed/
  dataset_path: data/raw/PHM_2010/

preprocessing:
  denoising_method: 'wavelet'
  smoothing_window: 5
  standardization: true  # 标准化处理
  outlier_removal:
    method: 'zscore'  # 使用Z-score方法
    factor: 3.0

feature_extraction:
  time_domain_features: ['mean', 'std', 'rms', 'skewness', 'kurtosis', 'peak', 'crest_factor', 'variance', 'min', 'max', 'median', 'range']
  frequency_domain_features: ['main_frequency_amplitude', 'energy_ratio', 'spectral_entropy', 'spectral_centroid', 'dominant_frequency']
  wavelet_packet:
    level: 4  # 减少到4层小波包分解
  statistical_features: true
  interaction_features: true

feature_selection:
  spearman_threshold: 0.75  # 增加相关性阈值
  pearson_threshold: 0.85   # 增加相关性阈值
  n_features_to_select: 6   # 最终选择6个特征
  importance_threshold: 0.03  # 增加特征重要性阈值
  use_rfe: true
  mutual_info: true

dimensionality_reduction:
  pca_n_components: 0.95    # 保留95%方差
  use_pca: true  # 开启PCA

models:
  bpnn:
    # 网络结构 - 使用最优配置
    hidden_layers: [64, 32]  # 双隐藏层结构
    output_size: 1
    activation: 'relu'
    output_activation: 'linear'
    dropout_rate: 0.105  # 优化后的Dropout率
    batch_normalization: true
    
    # 训练参数 - 使用优化参数
    learning_rate: 0.0085  # 优化后的学习率
    batch_size: 16  # 减小批次大小
    epochs: 300  # 增加训练轮数
    optimizer: 'adam'
    weight_decay: 0.00636  # 优化后的L2正则化系数
    l1_weight: 0.0001  # 轻微L1正则化
    
    # Levenberg-Marquardt算法参数
    train_function: 'adam'  # 使用Adam优化器
    lm_damping: 0.1
    
    # 学习率调度
    use_lr_scheduler: true
    lr_scheduler_params:
      type: 'reduce_on_plateau'
      factor: 0.3  # 更激进的学习率衰减
      patience: 15  # 增加等待轮数
      min_lr: 0.00005  # 减小最小学习率
      step_size: 30
      gamma: 0.3
      t_max: 150
      eta_min: 0
    
    # 早停设置
    early_stopping_patience: 30  # 增加早停耐心值
    min_error: 0.005  # 降低最小误差阈值

grid_search:
  enabled: false
  param_grid:
    hidden_layers: [[32, 16], [64, 32], [128, 64]]
    learning_rate: [0.01, 0.005, 0.001]
    batch_size: [16, 32, 64]
    dropout_rate: [0.1, 0.2, 0.3]
    optimizer: ['adam', 'rmsprop']
  scoring: 'neg_mean_absolute_error'
  cv_folds: 3
  n_jobs: -1

training:
  test_size: 0.2
  cv_folds: 5
  random_state: 42
  model_type: 'bpnn'
  train_experiments: ['c1', 'c4']
  test_experiments: ['c6']
  evaluation_metrics: ['mae', 'rmse', 'r2']
  target_metrics:
    mae_threshold: 5.0
    rmse_threshold: 5.0
    r2_threshold: 0.85
  early_stopping: true

logging:
  log_file: 'bpnn_training.log'
  log_level: 'INFO' 